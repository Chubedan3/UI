local Library = {}

-- Tween function (hiệu ứng mượt)
local function Tween(obj, properties, duration)
    game:GetService("TweenService"):Create(
        obj,
        TweenInfo.new(duration, Enum.EasingStyle.Sine, Enum.EasingDirection.Out),
        properties
    ):Play()
end

-- Tạo GUI chính
function Library:CreateWindow(title)
    local ScreenGui = Instance.new("ScreenGui")
    local MainFrame = Instance.new("Frame")
    local TitleLabel = Instance.new("TextLabel")
    local UIListLayout = Instance.new("UIListLayout")
    local ToggleButton = Instance.new("ImageButton") -- Nút bật/tắt UI

    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    ScreenGui.Name = "CustomUILib"

    MainFrame.Parent = ScreenGui
    MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    MainFrame.Size = UDim2.new(0, 300, 0, 400)
    MainFrame.Position = UDim2.new(0.5, -150, 0.5, -200)
    MainFrame.BorderSizePixel = 0

    -- Tiêu đề UI
    TitleLabel.Parent = MainFrame
    TitleLabel.Size = UDim2.new(1, 0, 0, 40)
    TitleLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    TitleLabel.Text = title
    TitleLabel.TextSize = 18
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.Font = Enum.Font.SourceSansBold
    TitleLabel.BorderSizePixel = 0

    UIListLayout.Parent = MainFrame
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 5)

    -- Nút bật/tắt UI
    ToggleButton.Parent = ScreenGui
    ToggleButton.Size = UDim2.new(0, 50, 0, 50)
    ToggleButton.Position = UDim2.new(0, 10, 0, 10)
    ToggleButton.BackgroundTransparency = 1
    ToggleButton.Image = "rbxassetid://100626113769894"

    local isVisible = true
    ToggleButton.MouseButton1Click:Connect(function()
        isVisible = not isVisible
        Tween(MainFrame, { Position = UDim2.new(0.5, -150, 0.5, isVisible and -200 or -800) }, 0.5)
    end)

    local self = { MainFrame = MainFrame }
    setmetatable(self, { __index = Library })
    return self
end

-- Tạo Button với hiệu ứng
function Library:AddButton(tab, text, callback)
    local Button = Instance.new("TextButton")
    Button.Parent = tab
    Button.Size = UDim2.new(0, 280, 0, 30)
    Button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    Button.TextColor3 = Color3.fromRGB(255, 255, 255)
    Button.Text = text
    Button.BorderSizePixel = 0

    Button.MouseButton1Click:Connect(function()
        Tween(Button, { BackgroundColor3 = Color3.fromRGB(100, 100, 100) }, 0.1)
        wait(0.1)
        Tween(Button, { BackgroundColor3 = Color3.fromRGB(50, 50, 50) }, 0.1)
        callback()
    end)
end

-- Tạo Toggle với hiệu ứng
function Library:AddToggle(tab, text, callback)
    local Toggle = Instance.new("TextButton")
    Toggle.Parent = tab
    Toggle.Size = UDim2.new(0, 280, 0, 30)
    Toggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
    Toggle.Text = text .. " [OFF]"
    Toggle.BorderSizePixel = 0

    local state = false

    Toggle.MouseButton1Click:Connect(function()
        state = not state
        Tween(Toggle, { BackgroundColor3 = state and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(60, 60, 60) }, 0.2)
        Toggle.Text = text .. (state and " [ON]" or " [OFF]")
        callback(state)
    end)
end

-- Tạo Slider với hiệu ứng
function Library:AddSlider(tab, text, min, max, callback)
    local SliderFrame = Instance.new("Frame")
    SliderFrame.Parent = tab
    SliderFrame.Size = UDim2.new(0, 280, 0, 40)
    SliderFrame.BackgroundColor3 = Color3.fromRGB(70, 70, 70)

    local SliderLabel = Instance.new("TextLabel")
    SliderLabel.Parent = SliderFrame
    SliderLabel.Size = UDim2.new(1, 0, 0.5, 0)
    SliderLabel.Text = text .. ": " .. min
    SliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    SliderLabel.BackgroundTransparency = 1

    local Slider = Instance.new("Frame")
    Slider.Parent = SliderFrame
    Slider.Size = UDim2.new(0, 0, 0, 10)
    Slider.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
    Slider.BorderSizePixel = 0

    local dragging = false

    SliderFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local relative = math.clamp((input.Position.X - SliderFrame.AbsolutePosition.X) / 280, 0, 1)
            local value = math.floor(min + (max - min) * relative)
            Tween(Slider, { Size = UDim2.new(relative, 0, 0, 10) }, 0.1)
            SliderLabel.Text = text .. ": " .. value
            callback(value)
        end
    end)

    game:GetService("UserInputService").InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
end

return Library
